{"version":3,"sources":["utils/use-form-styles.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/icons/ArrowBackIos.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","components/RoleEdit.tsx"],"names":["useFormStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","marginedTop","Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","d","FormGroup","_props$row","row","flexDirection","flexWrap","newData","roleId","description","resolvers","errorInputs","rtrnAPI","RoleEdit","formClasses","useState","stateData","setStateData","useGraphQL","responseData","data","flag","errors","fetchData","resolversData","resolverErrors","fetchResolver","status","setStatus","inputError","setInputError","mounted","useRef","history","useHistory","id","useParams","handleText","field","evt","target","isResolverSelected","resolver","includes","useEffect","current","expression","isAuth","push","validation","length","useEffectDeep","join","replace","Grid","container","justify","item","Typography","CircularProgress","Box","m","Button","variant","color","size","startIcon","onClick","BannerAlert","severity","isOpen","closeFn","title","body","gutterBottom","TextField","required","label","fullWidth","autoComplete","onChange","error","helperText","FormControl","FormLabel","map","key","keyGenerate","FormControlLabel","control","Checkbox","checked","event","filter","prev","FormHelperText","justifyContent","some","ierr"],"mappings":"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","file":"static/js/10.16c00ca1.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useFormStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    marginedTop: {\n      marginTop: theme.spacing(2),\n    }\n  })\n);\n\nexport default useFormStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  FormHelperText,\n  Checkbox,\n  Box,\n  Grid,\n  Typography,\n  CircularProgress,\n} from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport useGraphQL from '../utils/use-graphql';\nimport { BannerError } from '../globals/error-handling';\nimport useFormStyles from '../utils/use-form-styles';\nimport useEffectDeep from '../utils/use-effect-deep';\nimport BannerAlert from './BannerAlert';\nimport keyGenerate from '../utils/string';\n\ntype RoleType = {\n  roleId: string,\n  name: string,\n  description: string,\n  resolvers: string[]  \n}\n\nconst newData: RoleType = {\n  roleId: '_',\n  name: '',\n  description: '',\n  resolvers: [],\n}\n\nconst errorInputs = {\n  name: false,\n  description: false,\n  resolvers: false,\n};\n\nconst rtrnAPI = `{\n  roleId: _id\n  name\n  description\n  resolvers\n}`;\n\nexport default function RoleEdit() {\n  const formClasses = useFormStyles();\n  const [ stateData, setStateData ] = useState<RoleType>(newData);\n  const { data: responseData, flag, errors, fetchData } = useGraphQL<RoleType>(newData);\n  const { data: resolversData, errors: resolverErrors, fetchData: fetchResolver} = useGraphQL<string[]>([]);\n  const [ status, setStatus ] = useState('input');\n  const [ inputError, setInputError ] = useState(errorInputs);\n  const mounted = useRef(false);\n  const history = useHistory();\n  const {id} = useParams();\n\n  useEffect(() => {\n    if(!mounted.current) {\n      if (!id) history.push('/roles');\n      else {\n        fetchResolver({expression: `query {\n          resolvers\n        }`, isAuth: true});\n        if (id !== '_') {\n          fetchData({ expression:`query{\n            roleResponse: roleById(id:\"${id}\") ${rtrnAPI}\n          }`, isAuth: true, flag: 'get'});\n        }\n      }\n    }\n  }, [id, fetchResolver, history, fetchData]);\n\n  useEffect(() => {\n    const validation = {\n      name: stateData.name.length < 3,\n      description: stateData.description.length < 6,\n      resolvers: stateData.resolvers.length === 0,\n    };\n    setInputError(validation); \n  }, [stateData.name, stateData.description, stateData.resolvers.length]);\n\n  useEffectDeep(() => {\n    if (status === 'save') {\n      const { roleId, name, description, resolvers } = stateData;\n      const resolver = (roleId === '_') ? 'roleCreate(' : `roleUpdate(id: \"${roleId}\", `;\n      const expression = `mutation {\n        roleResponse: ${resolver}roleInput: {\n          name: \"${name}\",\n          description: \"${description}\",\n          resolvers: [\"${resolvers.join('\", \"')}\"]\n        })${rtrnAPI}\n      }`;\n      const flag = (roleId === '_') ? 'create' : 'update';\n      fetchData({expression, isAuth: true, flag});\n      setStatus('sending');\n    }\n  }, [status, stateData, fetchData]);\n\n  useEffectDeep(() => {\n    if (responseData) {\n      setStateData({...responseData});\n      if (['create', 'update'].includes(flag)) {\n        setStatus('saved');  \n      }\n      if(flag === 'create') {\n        history.replace(`/role/${responseData.roleId}`);\n      }\n    } \n  }, [responseData, flag, history]);\n\n  function handleText(field: string) {\n    return (evt: React.ChangeEvent<HTMLInputElement>) => {\n      setStateData({...stateData, [field]: evt.target.value})\n    }\n  }\n\n  function isResolverSelected(resolver: string): boolean {\n    return stateData.resolvers.includes(resolver);\n  }\n\n  function handleResolverChange(item: string) {\n    return (event: React.ChangeEvent<HTMLInputElement>) => {\n      const resolvers = (event.target.checked)\n        ? [...stateData.resolvers, item]\n        : stateData.resolvers.filter(resolver => resolver !== item);\n      setStateData((prev: RoleType) => ({...prev, resolvers}));\n    }\n  }\n\n  function saveUser() {\n    if (Object.values(inputError).some(ierr => ierr)) return false;\n    setStatus('save');\n  }\n\n  function cancelEdit() {\n    if(responseData) {\n      setStateData({...responseData});\n    }\n  }\n\n  if (status === 'sending') {\n    return (\n      <Container>  \n        <Grid container justify=\"center\">\n          <Grid item xs={12}>\n            <Typography>Saving Role's data</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <CircularProgress />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Box m={1}>\n        <Button\n          variant=\"text\"\n          color=\"primary\"\n          size=\"small\"\n          startIcon={<ArrowBackIosIcon />}\n          onClick={() => history.push('/roles')}\n        >\n          Return to list\n        </Button>        \n      </Box>\n      <BannerAlert\n        severity=\"success\"\n        isOpen={status === 'saved'}\n        closeFn={() => setStatus('input')}\n        title=\"Role saved\"\n        body={'Data of role ' + stateData.name + ' was successfully saved on DataBase'}\n      />\n      <BannerError\n        errors={[errors, resolverErrors]}\n      />\n      <Box m={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          Role details\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              name=\"name\"\n              label=\"Name\"\n              value={stateData.name}\n              fullWidth\n              autoComplete=\"name\"\n              onChange={handleText('name')}\n              error={inputError.name}\n              helperText={inputError.name && 'Put a valid name'}\n          />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              name=\"description\"\n              label=\"Description\"\n              fullWidth\n              autoComplete=\"description\"\n              value={stateData.description}\n              onChange={handleText('description')}\n              error={inputError.description}\n              helperText={inputError.description && 'Invalid description'}\n            />\n          </Grid>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n            <FormGroup>\n              <Grid container>\n                {\n                  resolversData && resolversData.map((resolver: string) => {\n                    return (\n                      <Grid item xs={6} md={4} lg={3} key={keyGenerate(resolver, 10)}>\n                        <FormControlLabel\n                          control={\n                            <Checkbox \n                              checked={isResolverSelected(resolver)} \n                              onChange={handleResolverChange(resolver)} \n                              name={resolver}\n                            />\n                          }\n                          label={resolver}\n                        />\n                      </Grid>\n                    )\n                  })\n                }\n              </Grid>\n            </FormGroup>\n            <FormHelperText >Be careful</FormHelperText>\n          </FormControl>\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <FormControl className={formClasses.formControl}>\n                <Button variant=\"contained\" onClick={cancelEdit}>Cancel</Button>\n              </FormControl>\n              <FormControl className={formClasses.formControl}>\n                <Button variant=\"contained\" color=\"primary\" onClick={saveUser}>\n                  Save\n                </Button>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n"],"sourceRoot":""}