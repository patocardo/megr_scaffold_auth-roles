{"version":3,"sources":["components/Navbar.tsx","App.tsx","serviceWorker.tsx","index.tsx","globals/error-handling.tsx","globals/context.tsx","utils/string.tsx","utils/array.tsx","utils/use-graphql.tsx","utils/use-effect-deep.tsx","utils/use-auth.tsx","components/BannerAlert.tsx"],"names":["useStyles","makeStyles","theme","createStyles","navlink","textDecoration","buttonRoot","color","menuButton","marginRight","spacing","breakpoints","up","display","root","flexGrow","textAlign","topMenu","down","title","list","width","fullList","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","outTargets","label","key","NavBar","classes","contextState","useContext","StateContext","useState","isOpen","setIsOpen","targets","setTargets","history","useHistory","logOut","useLogOut","toggleDrawer","open","event","type","includes","useEffect","token","length","Fragment","CssBaseline","AppBar","className","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","map","elm","to","Button","push","Drawer","anchor","onClose","clsx","role","onKeyDown","List","index","ListItem","button","ListItemText","primary","RenewToken","lazy","Home","NoRoute","Login","Users","UserEdit","Roles","RoleEdit","Fallback","Grid","container","justify","item","xs","LinearProgress","align","contextStateInitial","ContextStateOut","withErrorBoundary","useReducer","contextReducer","contextDispatch","errors","setErrors","a","checkIsAlive","payload","mapBackErrors","forEach","err","logError","message","isLogged","Provider","value","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","hasErrors","Array","isArray","hasOwnProperty","call","parseGraphQLError","response","keyGenerate","parsed","safeParseJSON","mapJSError","stack","info","CallerComponent","state","this","setState","Error","restProps","Component","displayName","name","WrappedComponent","BannerError","showErrors","setShowErrors","useEffectDeep","clean","filter","flat","severity","closeFn","body","email","expiration","remember","defaultContext","createContext","action","text","replace","arr","temporaryValue","randomIndex","currentIndex","rtrnArr","Math","floor","random","shuffle","padEnd","split","slice","join","alter","JSON","parse","e","origin","baseParams","method","headers","Accept","getResolver","expression","fit","useGraphQL","initial","data","flag","result","setResult","isAuth","args","fetchData","params","stringify","query","Authorization","fetch","json","comesWithErrors","resObj","fetchGraphQl","resolver","respErr","callback","dependencies","prev","useRef","isEqual","current","useDeepCompare","useLogIn","password","loginData","logIn","loginErrors","setLoginErrors","newToken","toString","localStorage","setItem","sessionStorage","deadToken","currentToken","getItem","Promise","resolve","useRefreshToken","doRefresh","refreshToken","refreshErrors","doLogOut","removeItem","logOutErrors","frame","backgroundColor","palette","light","borderRadius","shape","common","black","alertIcon","dark","IconBanner","BannerAlert","bodyToShow","dense","phar","in","m","p"],"mappings":"mcAWMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,QAAS,CACPC,eAAgB,QAElBC,WAAY,CACVC,MAAO,SAETC,WAAW,aACTC,YAAaP,EAAMQ,QAAQ,IAC1BR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAGbC,KAAK,aACHC,SAAU,GACTb,EAAMS,YAAYC,GAAG,MAAQ,CAC5BI,UAAW,SAGfC,QAAQ,eACLf,EAAMS,YAAYO,KAAK,MAAQ,CAC9BL,QAAS,SAGbM,MAAO,CACLJ,SAAU,GAEZK,KAAM,CACJC,MAAO,KAETC,SAAU,CACRD,MAAO,aAUb,SAASE,EAAgBC,GAA8B,IAC7CC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAEZC,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,EACXC,OAAQL,EAASA,SAAWM,IAE9B,OAAKP,EAGEQ,IAAMC,aAAaT,EAAU,CAClCU,UAAWR,EAAU,EAAI,IAHjB,qCAOZ,IAAMS,EAAa,CAAC,CAACC,MAAM,QAASC,IAAK,UAE1B,SAASC,EAAOf,GAC7B,IAAMgB,EAAUxC,IACRyC,EAAiBC,qBAAWC,KAA5BF,aAFkD,EAG9BG,oBAAS,GAHqB,mBAGnDC,EAHmD,KAG3CC,EAH2C,OAI5BF,mBAASR,GAJmB,mBAInDW,EAJmD,KAI1CC,EAJ0C,KAKpDC,EAAUC,cACTC,EAAUC,cAAVD,OAEDE,EAAe,SAACC,GAAD,OAAmB,SAACC,GAEtB,YAAfA,EAAMC,MACN,CAAC,MAAO,SAASC,SAAUF,EAA8BjB,MAI3DQ,EAAUQ,KAeZ,OAPAI,qBAAU,WACRV,EAAWP,EAAakB,MAAMC,OAAS,EACnC,CAAC,CAACvB,MAAO,OAAQC,IAAI,IAAK,CAACD,MAAO,QAASC,IAAK,SAAU,CAACD,MAAO,QAASC,IAAK,UAChFF,KAEH,CAACK,EAAakB,QAGf,kBAAC,IAAME,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACvC,EAAoBC,EACnB,kBAACuC,EAAA,EAAD,CAAQC,UAAWxB,EAAQ1B,MACzB,kBAACmD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWxB,EAAQhC,WAAYD,MAAM,UAAU6D,aAAW,OAAQC,QAAShB,GAAa,IAC/G,kBAAC,IAAD,OAEF,kBAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWxB,EAAQrB,OAA5C,aACA,yBAAK6C,UAAWxB,EAAQvB,SACrB8B,EAAQyB,KAAI,SAACC,GAAD,OAET,kBAAC,IAAD,CAASC,GAAE,WAAMD,EAAInC,KAAOA,IAAKmC,EAAIpC,MAAO2B,UAAWxB,EAAQpC,SAC7D,kBAACuE,EAAA,EAAD,CAAQpE,MAAM,UAAUiC,QAAS,CAC/B1B,KAAM0B,EAAQlC,aACZmE,EAAIpC,WAKXI,EAAakB,MAAMC,OAAS,GAC3B,kBAACe,EAAA,EAAD,CACEpE,MAAM,UACNiC,QAAS,CAAE1B,KAAM0B,EAAQlC,YACzB+D,QArClB,WACElB,GAAO,GACPF,EAAQ2B,KAAK,OAgCC,eAaZ,kBAACX,EAAA,EAAD,MACA,kBAACY,EAAA,EAAD,CAAQC,OAAO,OAAOxB,KAAMT,EAAQkC,QAAS1B,GAAa,IACxD,yBACEW,UAAWgB,YAAKxC,EAAQpB,MACxB6D,KAAK,eACLZ,QAAShB,GAAa,GACtB6B,UAAW7B,GAAa,IAExB,kBAAC8B,EAAA,EAAD,KACGpC,EAAQyB,KAAI,SAACC,EAAKW,GAAN,OACX,kBAAC,IAAD,CAASV,GAAE,WAAMD,EAAInC,KAAOA,IAAKmC,EAAInC,IAAK0B,UAAWxB,EAAQpC,SAC3D,kBAACiF,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,CAAcC,QAASf,EAAIpC,iB,YCnIvCoD,EAAaC,gBAAK,kBAAM,iCACxBC,EAAOD,gBAAK,kBAAM,kCAClBE,EAAUF,gBAAK,kBAAM,kCACrBG,EAAQH,gBAAK,kBAAM,uDACnBI,EAAQJ,gBAAK,kBAAM,8DACnBK,EAAWL,gBAAK,kBAAM,uDACtBM,EAAQN,gBAAK,kBAAM,8DACnBO,EAAWP,gBAAK,kBAAM,wDAEtBQ,EAAW,kBACf,oCACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS3F,QAAS,GACxC,kBAACyF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACjC,EAAA,EAAD,CAAYmC,MAAM,SAASlC,QAAQ,MAAnC,mBAMAmC,EAAmB,eAAOC,IAAP,CAAwBhD,MAAO,MAgEzCiD,mBA9Df,WAAgB,IAAD,EAC4BC,qBAAWC,IAAgBJ,GADvD,mBACLjE,EADK,KACSsE,EADT,OAEiBnE,mBAA6B,MAF9C,mBAELoE,EAFK,KAEGC,EAFH,KAIbvD,qBAAU,WACR,sBAAC,4BAAAwD,EAAA,yDAC4B,MAAvBzE,EAAakB,MADlB,0EAGyBwD,YAAa1E,EAAakB,MAAMC,OAAS,EAAInB,EAAakB,MAAQ,IAH3F,QAGSyD,EAHT,QAIczD,MAAMC,OAAS,EACxBmD,EAAgB,CAACvD,KAAM,cAEvBuD,EAAgB,CAACvD,KAAM,WAAY4D,YAPxC,gDAUGH,EAAUI,YAAc,EAAD,KAV1B,wDAAD,KAaC,CAAC5E,EAAakB,MAAOoD,IAExBrD,qBAAU,WACLsD,GAEDA,EAAOM,SAAQ,SAAAC,GAAG,OAAIC,YAASD,EAAIE,cAEpC,CAACT,IAEJ,IAAMU,EAAWjF,EAAakB,MAAMC,OAAS,EAE7C,OACE,kBAAC,IAAa+D,SAAd,CAAuBC,MAAO,CAACnF,eAAcsE,oBAC3C,kBAAC,IAAD,KACE,oCACE,kBAACxE,EAAD,MACA,kBAAC,WAAD,CAAUsF,SAAU,kBAAC,EAAD,OAEhBH,GAAa,kBAACjC,EAAD,MAEf,kBAAC,IAAD,KAEIiC,GAAa,CACX,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,SAASzF,IAAI,SAAQ,kBAACwD,EAAD,OACvC,kBAAC,IAAD,CAAOiC,KAAK,YAAYzF,IAAI,YAAW,kBAACyD,EAAD,OACvC,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,SAASzF,IAAI,SAAQ,kBAAC0D,EAAD,OACvC,kBAAC,IAAD,CAAO+B,KAAK,YAAYzF,IAAI,YAAW,kBAAC2D,EAAD,QAG3C,kBAAC,IAAD,CAAO8B,KAAK,SAASC,UAAWnC,IAChC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,KAAI,kBAACpC,EAAD,OAEG,MAAvBlD,EAAakB,OACX,kBAAC,IAAD,CAAOoE,KAAK,KAAI,kBAACnC,EAAD,eChFdqC,QACW,cAA7BvG,OAAOwG,SAASC,UAEe,UAA7BzG,OAAOwG,SAASC,UAEhBzG,OAAOwG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMzE,SAAP,KACE,kBAAC,EAAD,OAEF0E,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMvB,a,yWEzHrB,SAASyB,EAAUtB,GACxB,OAAQuB,MAAMC,QAAQxB,IAAUA,EAAMhE,OAAS,GAAM,GAAIyF,eAAeC,KAAK1B,EAAM,GAAI,OAmBlF,SAAS2B,EAAkBC,GAAoD,IAC7ExC,EAAWwC,EAAXxC,OACP,OAAKA,GAAWmC,MAAMC,QAAQpC,IAAYA,EAAOpD,OAC1CoD,EAAOxC,KAAI,SAAC+C,GAAD,MAAU,CAC1BjF,IAAKmH,YAAYlC,EAAIE,QAAS,IAC9BA,QAASF,EAAIE,YAHiD,KAM3D,SAASJ,EAAcE,GAC5B,IAAMmC,EAASC,YAAcpC,EAAIE,QAASF,EAAIE,SAC9C,OAAG0B,MAAMC,QAAQM,GAAgBA,EAC1B,CAACE,EAAWrC,IAGd,SAASqC,EAAWrC,GACzB,MAAO,CACLjF,IAAKmH,YAAYlC,EAAIE,QAAS,IAC9BA,QAASF,EAAIE,QACboC,MAAOtC,EAAIsC,OAIR,SAASrC,EAASD,EAA2BuC,GAElDb,QAAQD,MAAMzB,EAAKuC,GAGN,SAASlD,EACtBmD,GACC,IAAD,IAQA,OAAO,EAAP,8MAIWC,MAAkB,CACzBhD,OAAQ,IALZ,gEAQoBO,EAAmBuC,GAC/BvC,GACF0C,KAAKC,SAAS,CAAElD,OAAQ,CAAC4C,EAAWrC,MACpCC,EAASD,EAAKuC,IAEd,IAAIK,MAAM,oBAbhB,+BAiBY,IAAD,EAC4BF,KAAKzI,MAAnB4I,GADd,EACC3I,SADD,6BAECuF,EAAWiD,KAAKD,MAAhBhD,OAER,OAAIA,GAAUA,EAAOpD,OAEjB,4BACGoD,EAAOxC,KAAI,SAAA+C,GAAG,OAAI,wBAAIjF,IAAKiF,EAAIjF,KAAMiF,EAAIE,aAKzC,kBAACsC,EAAqBK,OA7BjC,GAAyBnI,IAAMoI,WAA/B,EACSC,YADT,4BAC4CP,EAAgBQ,KAD5D,OAEkBC,iBAAmBT,EAFrC,EAsCK,SAASU,EAAYjJ,GAA8B,IAChDwF,EAAqCxF,EAArCwF,OAD+C,EACVxF,EAA7BiG,eADuC,MAC7B,eAD6B,IAElB7E,mBAAsB,IAFJ,mBAE/C8H,EAF+C,KAEnCC,EAFmC,KAiBvD,OAbAC,aAAc,WACZ,IAAMC,EAAQ7D,EAAO8D,QAAO,SAAArG,GAAG,QAAKA,KAIlCkG,EAHGE,EAGWA,EAAME,OAAOvG,KAAI,SAAAC,GAC7B,OAAGA,aAAe0F,MAAcP,EAAWnF,GACpCA,KAJK,MAQf,CAACuC,IAGF,kBAAC,IAAD,CACEgE,SAAS,QACTnI,OAAQ6H,EAAW9G,OAAS,EAC5BqH,QAAS,kBAAMN,EAAc,KAC7BxJ,MAAOsG,EACPyD,KAAMR,M,yJC5GC/D,EAAkB,CAAChD,MAAO,GAAIwH,MAAO,GAAIC,WAAY,KAAMC,UAAU,GAErEC,EAAmC,CAC9C7I,aAAckE,EACdI,gBAAiB,kBAAM,IAGZpE,EAAe4I,wBAAcD,GAEnC,SAASxE,EAAekD,EAAyBwB,GAAuC,IAAD,EACxBA,EAAOpE,SAAW,GADM,IACpFgE,kBADoF,MACvE,EADuE,MACpED,aADoE,MAC5D,GAD4D,MACxDxH,aADwD,MAChD,GADgD,MAC5C0H,gBAD4C,SAE5F,OAAQG,EAAOhI,MACb,IAAK,YAAa,OAAOmD,EACzB,IAAK,WACH,OAAIwE,EAAMvH,QAAWwH,GAAezH,EAAMC,OACnC,CAACuH,QAAOxH,QAAOyH,aAAYC,YADuB,eAAIrB,GAE/D,IAAK,iBACH,OAAIoB,IAAc,OAACzH,QAAD,IAACA,OAAD,EAACA,EAAOC,QACnB,eAAIoG,EAAX,CAAkBrG,MAAOA,EAAOyH,eADS,eAAIpB,GAE/C,QAAS,OAAO,eAAIA,M,gHC3CT,SAASP,EAAYgC,EAAc7H,GAChD,IAAItB,EAAMmJ,EAAKC,QAAQ,MAAO,IAE9B,OCHa,SAAiBC,GAM9B,IALA,IAEIC,EACAC,EAHAC,EAAeH,EAAI/H,OACjBmI,EAAO,YAAOJ,GAII,IAAjBG,GACLD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBG,EADjBD,GAAgB,GAEhBC,EAAQD,GAAgBC,EAAQF,GAChCE,EAAQF,GAAeD,EAGzB,OAAOG,EDXAI,EADP7J,EAAMA,EAAIsB,OAASA,EAAStB,EAAMA,EAAI8J,OAAOxI,EAAQ,+BAClCyI,MAAM,KAAKC,MAAM,EAAG1I,GAAQ2I,KAAK,IAG/C,SAAS5C,EAAc8B,EAAce,GAC1C,IAEE,OADeC,KAAKC,MAAMjB,GAE1B,MAAOkB,GACP,MAAyB,qBAAVH,EAAyB,KAAOA,K,uKEmB7CI,EAAsC,cAA7BlL,OAAOwG,SAASC,SAC3B,wBACAzG,OAAOwG,SAAS0E,OAEdC,EAAyB,CAC7BC,OAAQ,OACR5B,KAAM,GACN6B,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBAGZ,SAASC,EAAYC,GACnB,IAAMC,EAAMD,EAAW9E,MAAM,iDAC7B,IAAI+E,EAAK,MAAM,IAAIhD,MAAM,eACzB,OAAOgD,EAAI,GAGE,SAASC,IAA+D,IAAjDC,EAAgD,uDAA5B,KAA4B,EACtDzK,mBAAwB,CAAE0K,KAAMD,EAASE,KAAK,KADQ,mBAC5EC,EAD4E,KACpEC,EADoE,OAEtD7K,mBAA6B,MAFyB,mBAE5EoE,EAF4E,KAEpEC,EAFoE,OAG3DvE,qBAAWC,KAA5BF,EAH4E,EAG5EA,aAH4E,EAIzDG,mBAAyB,CAACsK,WAAY,GAAIQ,QAAQ,IAJO,mBAI5EC,EAJ4E,KAItEC,EAJsE,KA8BpF,OAxBAlK,qBAAU,WACR,sBAAC,oCAAAwD,EAAA,2DACIyG,EAAKT,WAAWtJ,OAAS,GAD7B,wDAEOiK,EAFP,eAGMhB,EAHN,CAIG3B,KAAMuB,KAAKqB,UAAU,CAAEC,MAAOJ,EAAKT,eAEjCS,EAAKD,QAAUjL,EAAakB,QAC9BkK,EAAOd,QAAQiB,cAAf,iBAAyCvL,EAAakB,QAPzD,SASwBsK,MAAM,GAAD,OAAIrB,EAAJ,YAAsBiB,GATnD,cASOrE,EATP,gBAUoBA,EAAS0E,OAV7B,UAUOA,EAVP,SAYOC,EAAkB5E,YAAkB2E,IAZ3C,wBAeGjH,EAAUkH,GAfb,mBAgBU,GAhBV,QAkBOC,EAAwB,CAACd,KAAMY,EAAKZ,KAAKL,EAAYU,EAAKT,aAAcK,KAAMI,EAAKJ,MAAQ,IACjGE,EAAUW,GAnBX,2CAAD,KAqBC,CAACT,EAAKT,WAAYS,EAAKD,OAAQC,EAAKJ,KAAM9K,EAAakB,QAEnD,eAAK6J,EAAZ,CAAoBxG,SAAQ4G,cAQvB,SAAeS,EAAtB,kC,4CAAO,WAA+B7M,GAA/B,iCAAA0F,EAAA,6DACGvD,EAAsBnC,EAAtBmC,MAAOuJ,EAAe1L,EAAf0L,WACToB,EAAWrB,EAAYC,GACvBW,EAHD,eAIAhB,EAJA,CAKH3B,KAAMuB,KAAKqB,UAAU,CAAEC,MAAOb,MAE5BvJ,GAAUA,EAAiBC,OAAS,IACtCiK,EAAOd,QAAQiB,cAAf,iBAAyCrK,IAEvCuK,EAAO,KAVN,kBAYoBD,MAAM,GAAD,OAAIrB,EAAJ,YAAsBiB,GAZ/C,cAYGrE,EAZH,iBAaUA,EAAS0E,OAbnB,WAaHA,EAbG,iDAcc,MAdd,gEAgBG,IAAI/D,MAAMsC,KAAKqB,UAAU,CAAClE,YAAW,EAAD,OAhBvC,aAkBCuE,EAAkB5E,YAAkB2E,IAlBrC,uBAmBqB,IAAI/D,MAAMsC,KAAKqB,UAAUK,IAnB9C,YAoBF,UAACD,SAAD,aAAC,EAAMZ,OAAwC,qBAAhC,UAAOY,SAAP,aAAO,EAAMZ,KAAKgB,IApB/B,uBAqBGC,EAAU9B,KAAKqB,UAAU,CAC7BxL,IAAK,eACLmF,QAAQ,qBAAD,OAAuB6G,EAAvB,gBAEH,IAAInE,MAAMoE,GAzBb,iCA2BEL,EAAKZ,KAAKgB,IA3BZ,2D,wDCxFP,qDAWe,SAAS1D,EAAc4D,EAA0BC,GAC9D/K,oBAAU8K,EATZ,SAAwB5G,GACtB,IAAM8G,EAAOC,iBAAc,IAI3B,OAHIC,kBAAQhH,EAAO8G,EAAKG,WACtBH,EAAKG,QAAUjH,GAEV8G,EAAKG,QAIQC,CAAeL,M,2PCUtB,SAASM,IAA6B,IAAD,EACRrM,qBAAWC,KAA/BoE,GAD4B,EAC1CtE,aAD0C,EAC5BsE,iBAD4B,EAEtBnE,mBAAyB,CAACuI,MAAO,GAAI6D,SAAU,GAAI3D,UAAU,IAFvC,mBAE1C4D,EAF0C,KAE/BC,EAF+B,OAGVtM,mBAAsB,IAHZ,mBAG1CuM,EAH0C,KAG7BC,EAH6B,KAI5CC,EAAWV,iBAAO,IAuCxB,OArCAjL,qBAAU,WACR,sBAAC,kCAAAwD,EAAA,oEAGK+H,EAAU9D,MAAMvH,OAAS,GACzBqL,EAAUD,SAASpL,OAAS,GAJjC,uBAQWsJ,EARX,6DAUyB+B,EAAU9D,MAVnC,yBAUyD8D,EAAUD,SAVnE,wBAU2FC,EAAU5D,SAASiE,WAV9G,+GAgBwBjB,YAA4B,CAAEnB,eAhBtD,QAgBWI,EAhBX,UAiBiB,UAAAA,EAAK3J,aAAL,eAAYC,QAAS,IACzBwD,EAD4B,eACdkG,EADc,CACRnC,MAAO8D,EAAU9D,QACvC8D,EAAU5D,SACZkE,aAAaC,QAAQ,QAASlC,EAAK3J,OAEnC8L,eAAeD,QAAQ,QAASlC,EAAK3J,OAEvC0L,EAASR,QAAUvB,EAAK3J,MACxBoD,EAAgB,CAAEvD,KAAM,WAAY4D,YACpC8H,GAAM,SAAAR,GAAI,sBAASA,EAAT,CAAevD,MAAO,SA1BvC,uDA8BGiE,EAAe,CAACxF,YAAW,EAAD,MA9B7B,wDAAD,KAkCA,CAACqF,EAAU9D,MAAO8D,EAAUD,SAAUC,EAAU5D,SAAUtE,IAErD,CAACoI,cAAaD,SAevB,IAAMQ,EAAY,CAACvE,MAAO,GAAIxH,MAAO,GAAIyH,WAAY,EAAGC,UAAU,GAE3D,SAAelE,EAAtB,kC,4CAAO,WAA4BwI,GAA5B,mBAAAzI,EAAA,yDACCvD,EAAuBgM,GAAgBF,eAAeG,QAAQ,UAAYL,aAAaK,QAAQ,SADhG,yCAEcC,QAAQC,QAAQJ,IAF9B,cAGCxC,EAHD,4CAIoBvJ,EAJpB,8EAUc0K,YAAkC,CAACnB,aAAYvJ,UAV7D,cAUC2J,EAVD,0BAWG,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMnC,OAAR,eAAqBmC,EAArB,CAA2B3J,UAAS+L,GAXtC,4C,sBAmBA,SAASK,IAAyC,IAAD,EACnB3C,YAA0B,CAACzJ,MAAO,GAAIyH,WAAY,IAA7EkC,EAD8C,EAC9CA,KAAMtG,EADwC,EACxCA,OAAQ4G,EADgC,EAChCA,UADgC,EAEZlL,qBAAWC,KAA7CF,EAF8C,EAE9CA,aAAcsE,EAFgC,EAEhCA,gBAFgC,EAGnBnE,oBAAS,GAHU,mBAG9CoN,EAH8C,KAGnCC,EAHmC,KAkCtD,OA7BAvM,qBAAU,WACR,GAAGsM,EAAW,CACZ,IAAMrM,EAAuBlB,EAAakB,OAAS8L,eAAeG,QAAQ,UAAYL,aAAaK,QAAQ,SAC3G,IAAKjM,EAAO,OACZ,IAAMuJ,EAAU,iDACSvJ,EADT,oEAMhBiK,EAAU,CAACV,aAAYQ,QAAQ,IAC/BuC,GAAa,MAEd,CAACD,EAAWvN,EAAakB,MAAOiK,IAEnChD,aAAc,WACZ,GAAI0C,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM3J,MAAMC,QAAS,EAAG,CAClC,IAAMwD,EAAO,eAAOkG,EAAP,CAAanC,MAAO1I,EAAa0I,QAE1C1I,EAAa4I,SACfkE,aAAaC,QAAQ,QAASlC,EAAK3J,OAEnC8L,eAAeD,QAAQ,QAASlC,EAAK3J,OAGvCoD,EAAgB,CAAEvD,KAAM,iBAAkB4D,eAE3C,CAACkG,EAAMvG,EAAiBtE,EAAa0I,MAAO1I,EAAa4I,WAErD,CAAC6E,cAAelJ,EAAQiJ,gBAQ1B,SAAS7M,IAAgC,IACtC2D,EAAoBrE,qBAAWC,KAA/BoE,gBADqC,EAEjBnE,oBAAS,GAFQ,mBAErCuN,EAFqC,KAE3BhN,EAF2B,KAY7C,OARAO,qBAAU,WACLyM,IACDZ,aAAaa,WAAW,SACxBX,eAAeW,WAAW,SAC1BrJ,EAAgB,CAAEvD,KAAM,iBAEzB,CAAC2M,EAAUpJ,IAEP,CAACsJ,aAAc,KAAMlN,Y,gCC3J9B,gNAwCMnD,EAAaC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC3DmQ,MAAO,CACLC,gBAAiB,SAAC/O,GAAD,OAA6BtB,EAAMsQ,QAAQhP,EAAMwJ,UAAUyF,OAC5EC,aAAcxQ,EAAMyQ,MAAMD,aAC1BnQ,MAAOL,EAAMsQ,QAAQI,OAAOC,OAE9BC,UAAW,CACTvQ,MAAO,SAACiB,GAAD,OAA6BtB,EAAMsQ,QAAQhP,EAAMwJ,UAAU+F,YAItE,SAASC,EAAWxP,GAClB,OAAOA,EAAMwJ,UACX,IAAK,QAAS,OAAQ,kBAAC,IAAD,CAAWhH,UAAWxC,EAAMsP,YAClD,IAAK,UAAW,OAAQ,kBAAC,IAAD,CAAa9M,UAAWxC,EAAMsP,YACtD,IAAK,OAAQ,OAAQ,kBAAC,IAAD,CAAU9M,UAAWxC,EAAMsP,YAChD,IAAK,UAAW,OAAQ,kBAAC,IAAD,CAAiB9M,UAAWxC,EAAMsP,YAC1D,QAAS,OAAQ,sCA4DNG,IAvDf,SAAqBzP,GAAwB,IACpCqB,EAA0CrB,EAA1CqB,OAAQmI,EAAkCxJ,EAAlCwJ,SAAUC,EAAwBzJ,EAAxByJ,QAAS9J,EAAeK,EAAfL,MAAO+J,EAAQ1J,EAAR0J,KACnC1I,EAAUxC,EAAU,CAACgL,aACrBkG,EAA8B,kBAAThG,EACvBA,EACAhC,YAAUgC,GAER,kBAAC,IAAD,CAAMiG,OAAO,GACRjG,EAAqB1G,KAAI,SAAA+C,GAAG,OAAK,kBAAC,IAAD,CAAUjF,IAAKiF,EAAIjF,KAAK,kBAAC,IAAD,CAAckD,QAAS+B,EAAIE,eAEtFyD,EAAkB1G,KAAI,SAAA4M,GAAI,OAAI,kBAAC,IAAD,CAAK9O,IAAKmH,YAAY2H,EAAM,KAAMA,MAEzE,OACE,kBAAC,IAAD,CAAUC,GAAIxO,GACZ,kBAAC,IAAD,CAAKmB,UAAWxB,EAAQ8N,MAAOgB,EAAG,EAAGC,EAAG,GACtC,kBAAC,IAAD,CAAMnL,WAAS,GACb,kBAAC,IAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACyK,EAAD,CAAYhG,SAAUA,EAAU8F,UAAWtO,EAAQsO,aAErD,kBAAC,IAAD,CAAMxK,MAAI,EAACC,GAAwB,qBAAZ0E,EAA2B,GAAI,IACpD,kBAAC,IAAD,CAAY1G,QAAQ,MAAMpD,GACzB+P,GAGmB,qBAAZjG,GACN,kBAAC,IAAD,CAAM3E,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAYlC,QAAS4G,EAAS1K,MAAM,UAAU6D,aAAW,SACvD,kBAAC,IAAD,c","file":"static/js/main.75f1c756.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, CssBaseline, useScrollTrigger, Button, IconButton,\r\n  Drawer, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { useLogOut } from '../utils/use-auth';\r\n\r\nimport { StateContext } from '../globals/context';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    navlink: {\r\n      textDecoration: 'none'\r\n    },\r\n    buttonRoot: {\r\n      color: 'white',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      }\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        textAlign: 'left',\r\n      }\r\n    },\r\n    topMenu: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        display: 'none',\r\n      }\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    }\r\n  }),\r\n);\r\n\r\ninterface ElevationScrollProps {\r\n  window?: () => Window,\r\n  children?: React.ReactElement\r\n}\r\n\r\nfunction ElevationScroll(props: ElevationScrollProps) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n  if (!children) {\r\n    return (<></>);\r\n  }\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst outTargets = [{label:'Login', key: 'login'}];\r\n\r\nexport default function NavBar(props: ElevationScrollProps) {\r\n  const classes = useStyles();\r\n  const { contextState } = useContext(StateContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [targets, setTargets] = useState(outTargets);\r\n  const history = useHistory();\r\n  const {logOut} = useLogOut();\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ['Tab', 'Shift'].includes((event as React.KeyboardEvent).key)\r\n    ) {\r\n      return;\r\n    }\r\n    setIsOpen(open);\r\n  }\r\n\r\n  function signOut() {\r\n    logOut(true);\r\n    history.push('/');\r\n  }\r\n \r\n  useEffect(() => {\r\n    setTargets(contextState.token.length > 3\r\n      ? [{label: 'Home', key:''}, {label: 'Users', key: 'users'}, {label: 'Roles', key: 'roles'}]\r\n      : outTargets\r\n    );\r\n  }, [contextState.token]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ElevationScroll {...props}>\r\n        <AppBar className={classes.root}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"  onClick={toggleDrawer(true)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>Auth-Auth</Typography>\r\n            <div className={classes.topMenu}>\r\n              {targets.map((elm) =>\r\n                (\r\n                  <NavLink to={`/${elm.key}`} key={elm.label} className={classes.navlink}>\r\n                    <Button color=\"primary\" classes={{\r\n                      root: classes.buttonRoot\r\n                    }}>{elm.label}</Button>\r\n                  </NavLink>\r\n                ))\r\n              }\r\n              {\r\n                 contextState.token.length > 3 && (\r\n                  <Button\r\n                    color=\"primary\" \r\n                    classes={{ root: classes.buttonRoot }}\r\n                    onClick={signOut}\r\n                  >\r\n                    Log Out\r\n                  </Button>                  \r\n                )\r\n              }\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Toolbar />\r\n      <Drawer anchor='left' open={isOpen} onClose={toggleDrawer(false)}>\r\n        <div\r\n          className={clsx(classes.list)}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(false)}\r\n          onKeyDown={toggleDrawer(false)}\r\n        >\r\n          <List>\r\n            {targets.map((elm, index) => (\r\n              <NavLink to={`/${elm.key}`} key={elm.key} className={classes.navlink}>\r\n                <ListItem button>\r\n                  <ListItemText primary={elm.label} />\r\n                </ListItem>\r\n              </NavLink>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useReducer, useEffect, useState } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  // Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {\n  Grid,\n  Typography,\n  LinearProgress,\n} from '@material-ui/core';\nimport { StateContext,  contextReducer, ContextStateOut } from './globals/context';\nimport { checkIsAlive } from './utils/use-auth';\n\nimport NavBar from './components/Navbar';\nimport withErrorBoundary, { ErrorType, logError, mapBackErrors } from './globals/error-handling';\nconst RenewToken = lazy(() => import('./components/RenewToken'));\nconst Home = lazy(() => import('./components/Home'));\nconst NoRoute = lazy(() => import('./components/NoRoute'));\nconst Login = lazy(() => import('./components/Login'));\nconst Users = lazy(() => import('./components/Users'));\nconst UserEdit = lazy(() => import('./components/UserEdit'));\nconst Roles = lazy(() => import('./components/Roles'));\nconst RoleEdit = lazy(() => import('./components/RoleEdit'));\n\nconst Fallback = () => (\n  <>\n  <Grid container justify=\"center\" spacing={2}>\n    <Grid item xs={8}>\n      <LinearProgress />\n    </Grid>\n    <Grid item xs={8}>\n      <Typography align=\"center\" variant=\"h6\">Loading App</Typography>\n    </Grid>\n  </Grid>\n</>\n)\n\nconst contextStateInitial = {...ContextStateOut, token: '_'};\n\nfunction App() {\n  const [ contextState, contextDispatch] = useReducer(contextReducer, contextStateInitial);\n  const [ errors, setErrors ] = useState<ErrorType[] | null>(null);\n \n  useEffect(() => {\n    (async() => {\n      if (contextState.token !== '_') return;\n      try {\n        const payload = await checkIsAlive(contextState.token.length > 3 ? contextState.token : '');\n        if(payload.token.length < 3) {\n          contextDispatch({type: 'SIGNEDOUT'});\n        } else {\n          contextDispatch({type: 'SIGNEDIN', payload});\n        }\n      } catch (err) {\n        setErrors(mapBackErrors(err)) ;\n      }        \n    })();\n  }, [contextState.token, contextDispatch]);\n\n  useEffect(() => {\n    if(errors) {\n      // TODO: improve this log;\n      errors.forEach(err => logError(err.message));\n    }\n  }, [errors]);\n\n  const isLogged = contextState.token.length > 3;\n\n  return (\n    <StateContext.Provider value={{contextState, contextDispatch}}>\n      <BrowserRouter>\n        <>\n          <NavBar />\n          <Suspense fallback={<Fallback />}>\n            {\n              isLogged && (<RenewToken />)\n            }\n            <Switch>\n              {\n                isLogged && ([\n                  <Route exact path='/users' key=\"users\"><Users /></Route>,\n                  <Route path='/user/:id' key=\"useredit\"><UserEdit /></Route>,\n                  <Route exact path='/roles' key=\"roles\"><Roles /></Route>,\n                  <Route path='/role/:id' key=\"roleedit\"><RoleEdit /></Route>\n                ])\n              }\n              <Route path='/login' component={Login} />\n              <Route exact path='/'><Home /></Route>\n              {\n                contextState.token !== '_' && (\n                  <Route path=\"*\"><NoRoute /></Route>\n                )\n              }\n            </Switch>\n          </Suspense>\n        </>\n      </BrowserRouter>\n    </StateContext.Provider>\n  );\n}\n\nexport default withErrorBoundary(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { ComponentType, useState } from 'react';\r\nimport keyGenerate, { safeParseJSON } from '../utils/string';\r\nimport { GraphQLGeneric, ResponseType, GraphQLWithError } from './types';\r\nimport BannerAlert from '../components/BannerAlert'; \r\nimport useEffectDeep from '../utils/use-effect-deep';\r\n\r\nexport type ErrorType = {\r\n  key: string,\r\n  message: string,\r\n  stack?: string,\r\n  /* TODO: evaluate how to return from server and UI:\r\n  loggable: boolean\r\n  public: boolean\r\n   */\r\n}\r\n\r\nexport function hasErrors(value: any): boolean {\r\n  return (Array.isArray(value) && value.length > 0 && ({}).hasOwnProperty.call(value[0], 'key'));\r\n}\r\n\r\nexport function mergeErrors(...args: Array<null| ErrorType[] | Error>): null | ErrorType[] {\r\n  const clean = args.filter(elm=> !!elm);\r\n  if (!clean) return null;\r\n  return clean.flat().map(elm => {\r\n    if(elm instanceof Error) return mapJSError(elm);\r\n    return elm;\r\n  });\r\n}\r\nexport function parseResponseError(response: ResponseType): Array<ErrorType> | null {\r\n  if (response.status?.toString()[0] === '2') return null;\r\n  return [{\r\n    key: keyGenerate(response.statusText, 10),\r\n    message: response.statusText + ':' + response.url,\r\n  }];\r\n}\r\n\r\nexport function parseGraphQLError(response: GraphQLGeneric): Array<ErrorType> | null {\r\n  const {errors} = (response as GraphQLWithError);\r\n  if (!errors || !Array.isArray(errors) || !errors.length) return null;\r\n  return errors.map((err) => ({\r\n    key: keyGenerate(err.message, 10),\r\n    message: err.message,\r\n  }));\r\n}\r\nexport function mapBackErrors(err: Error): ErrorType[] {\r\n  const parsed = safeParseJSON(err.message, err.message);\r\n  if(Array.isArray(parsed)) return parsed;\r\n  return [mapJSError(err)];\r\n}\r\n\r\nexport function mapJSError(err: Error): ErrorType {\r\n  return {\r\n    key: keyGenerate(err.message, 10),\r\n    message: err.message,\r\n    stack: err.stack\r\n  }\r\n}\r\n\r\nexport function logError(err: Error| string | null, info?: object) {\r\n  // TODO: create a service\r\n  console.error(err, info);\r\n}\r\n\r\nexport default function withErrorBoundary<CallerProps extends {}>(\r\n  CallerComponent: ComponentType<CallerProps>\r\n) {\r\n  type HocProps = {\r\n    // TODO\r\n  };\r\n  type HocState = {\r\n    readonly errors: ErrorType[] | null | undefined;\r\n  };\r\n\r\n  return class Hoc extends React.Component<HocProps, HocState> {\r\n    static displayName = `withErrorBoundary(${CallerComponent.name})`;\r\n    static readonly WrappedComponent = CallerComponent;\r\n\r\n    readonly state: HocState = {\r\n      errors: [],\r\n    };\r\n\r\n    componentDidCatch(err: Error | null, info: object) {\r\n      if (err) {\r\n        this.setState({ errors: [mapJSError(err)] })\r\n        logError(err, info);\r\n      } else {\r\n        new Error('Uncaught error');\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { children, ...restProps } = this.props;\r\n      const { errors } = this.state;\r\n\r\n      if (errors && errors.length) {\r\n        return (\r\n          <ul>\r\n            {errors.map(err => <li key={err.key}>{err.message}</li>)}\r\n          </ul>\r\n        );\r\n      }\r\n\r\n      return <CallerComponent {...(restProps as CallerProps)} />;\r\n    }\r\n  };\r\n};\r\ntype BannerErrorPropsType = {\r\n  errors: Array<null|ErrorType[]|ErrorType| Error>,\r\n  message?: string\r\n};\r\n\r\nexport function BannerError(props: BannerErrorPropsType) {\r\n  const { errors, message = 'Server Error' } = props;\r\n  const [ showErrors, setShowErrors] = useState<ErrorType[]>([]);\r\n\r\n  useEffectDeep(() => {\r\n    const clean = errors.filter(elm=> !!elm);\r\n    if (!clean) {\r\n      setShowErrors([]);\r\n    } else {\r\n      setShowErrors(clean.flat().map(elm => {\r\n        if(elm instanceof Error) return mapJSError(elm);\r\n        return elm;\r\n      }));\r\n    };\r\n\r\n  }, [errors]);\r\n\r\n  return (\r\n    <BannerAlert\r\n      severity=\"error\"\r\n      isOpen={showErrors.length > 0}\r\n      closeFn={() => setShowErrors([])}\r\n      title={message}\r\n      body={showErrors}\r\n    />\r\n  )\r\n}","import { createContext, Dispatch } from 'react';\r\n\r\nexport type ContextStateType = {\r\n  token: string,\r\n  email: string,\r\n  expiration: number | null,\r\n  remember: boolean\r\n}\r\n\r\nexport type ContextPayloadType = {\r\n  token?: string,\r\n  email?: string,\r\n  expiration?: number,\r\n  remember?: boolean,\r\n}\r\n\r\nexport type ActionType = { \r\n  type: string,\r\n  payload?: ContextPayloadType\r\n}\r\n\r\nexport type ContextValueType = {\r\n  contextState: ContextStateType,\r\n  contextDispatch: Dispatch<ActionType>,\r\n}\r\n\r\nexport const ContextStateOut = {token: '', email: '', expiration: null, remember: false};\r\n\r\nexport const defaultContext: ContextValueType = {\r\n  contextState: ContextStateOut,\r\n  contextDispatch: () => false,\r\n}\r\n\r\nexport const StateContext = createContext(defaultContext);\r\n\r\nexport function contextReducer(state: ContextStateType, action: ActionType): ContextStateType {\r\n  const { expiration = 0, email = '', token = '', remember = false} = action.payload || {};\r\n  switch (action.type) {\r\n    case 'SIGNEDOUT': return ContextStateOut;\r\n    case 'SIGNEDIN':\r\n      if(!email.length || !expiration || !token.length) return {...state};\r\n      return {email, token, expiration, remember};\r\n    case 'REFRESHEDTOKEN':\r\n      if(!expiration || !token?.length) return {...state};\r\n      return {...state, token: token, expiration};\r\n    default: return {...state};\r\n  }\r\n}\r\n","import shuffle from './array';\r\n\r\nexport default function keyGenerate(text: string, length: number): string {\r\n  let key = text.replace(/\\s/g, '');\r\n  key = key.length > length ? key : key.padEnd(length, 'abcdefghijklmnopqrstuvwxyz');\r\n  return shuffle(key.split('')).slice(0, length).join('');\r\n}\r\n\r\nexport function safeParseJSON(text: string, alter?: any): any {\r\n  try {\r\n    const parsed = JSON.parse(text);\r\n    return parsed;\r\n  } catch (e) {\r\n    return (typeof alter === 'undefined') ? null : alter;\r\n  }\r\n}","// simple array operations\r\n\r\nexport default function shuffle(arr: Array<any>): Array<any> {\r\n  let currentIndex = arr.length;\r\n  const rtrnArr = [...arr];\r\n  let temporaryValue;\r\n  let randomIndex;\r\n\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    temporaryValue = rtrnArr[currentIndex];\r\n    rtrnArr[currentIndex] = rtrnArr[randomIndex];\r\n    rtrnArr[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return rtrnArr;\r\n}\r\n","import { useState, useEffect, useContext, SetStateAction, Dispatch } from 'react';\r\nimport { parseGraphQLError, ErrorType, mapJSError} from '../globals/error-handling';\r\nimport { StateContext } from '../globals/context';\r\n\r\ntype ParamsType = {\r\n  method: string,\r\n  body: string,\r\n  headers: {\r\n    [propName: string]: string\r\n  }\r\n}\r\n\r\nexport type BaseResponseType = {\r\n  errors?: Array<any>,\r\n}\r\n\r\nexport type ResultType<T> = {\r\n  data: T | null,\r\n  flag: string\r\n}\r\nexport type FetchPropsType = {\r\n  expression: string,\r\n  isAuth?: boolean,\r\n  flag?: string,\r\n}\r\nexport type GraphQLResultType<T> = {\r\n  data: T | null,\r\n  flag: string\r\n  errors: ErrorType[] | null,\r\n  fetchData: Dispatch<SetStateAction<FetchPropsType>>\r\n}\r\n\r\nconst origin = window.location.hostname === 'localhost'\r\n  ? 'http://localhost:8000'\r\n  : window.location.origin;\r\n  \r\nconst baseParams: ParamsType = {\r\n  method: 'POST',\r\n  body: '',\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n    Accept: 'application/json',\r\n  },\r\n}\r\nfunction getResolver(expression: string): string {\r\n  const fit = expression.match(/(?:mutation|query|subscription)\\s*{\\s*(\\w+)/mi);\r\n  if(!fit) throw new Error('no resolver');\r\n  return fit[1];\r\n}\r\n\r\nexport default function useGraphQL<T>(initial: T | null = null): GraphQLResultType<T> {\r\n  const [ result, setResult ] = useState<ResultType<T>>({ data: initial, flag:''});\r\n  const [ errors, setErrors ] = useState<ErrorType[] | null>(null);\r\n  const { contextState } = useContext(StateContext);\r\n  const [ args, fetchData] = useState<FetchPropsType>({expression: '', isAuth: false});\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if(args.expression.length < 6) return;\r\n      const params: ParamsType = {\r\n        ...baseParams,\r\n        body: JSON.stringify({ query: args.expression }),\r\n      };\r\n      if (args.isAuth && contextState.token) {\r\n        params.headers.Authorization = `Bearer ${contextState.token}`;\r\n      }\r\n      const response = await fetch(`${origin}/graphql`, params);\r\n      const json = await response.json();\r\n\r\n      const comesWithErrors = parseGraphQLError(json);\r\n\r\n      if (comesWithErrors) {\r\n        setErrors(comesWithErrors);\r\n        return false;\r\n      }\r\n      const resObj: ResultType<T> = {data: json.data[getResolver(args.expression)], flag: args.flag || ''};\r\n      setResult(resObj);\r\n    })();\r\n  }, [args.expression, args.isAuth, args.flag, contextState.token]);\r\n\r\n  return { ...result, errors, fetchData };\r\n}\r\n\r\ntype FetchGraphQLPropsType = {\r\n  expression: string,\r\n  token?: string,\r\n}\r\n\r\nexport async function fetchGraphQl<T>(props: FetchGraphQLPropsType): Promise<T | null> {\r\n  const { token, expression } = props;\r\n  const resolver = getResolver(expression);\r\n  const params: ParamsType = {\r\n    ...baseParams,\r\n    body: JSON.stringify({ query: expression }),\r\n  };\r\n  if (token && (token as string).length > 4) {\r\n    params.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  let json = null;\r\n  try {\r\n    const response = await fetch(`${origin}/graphql`, params);\r\n    json = await response.json();\r\n    if(!json) return null;\r\n  } catch (e) {\r\n    throw new Error(JSON.stringify([mapJSError(e)]))\r\n  } \r\n  const comesWithErrors = parseGraphQLError(json);\r\n  if(comesWithErrors) throw new Error(JSON.stringify(comesWithErrors));\r\n  if(!json?.data || typeof json?.data[resolver] === 'undefined') {\r\n    const respErr = JSON.stringify({\r\n      key: 'bad response',\r\n      message: `property data and ${resolver} not found`\r\n    });\r\n    throw new Error(respErr);\r\n  }\r\n  return json.data[resolver];\r\n}\r\n","import {useRef, useEffect, EffectCallback} from 'react';\nimport { isEqual } from 'lodash';\n\nfunction useDeepCompare(value: any[]) {\n  const prev = useRef<any[]>([]);\n  if(!isEqual(value, prev.current)) {\n    prev.current = value;\n  }\n  return prev.current;\n}\n\nexport default function useEffectDeep(callback: EffectCallback, dependencies: any[]) {\n  useEffect(callback, useDeepCompare(dependencies))\n}","import { useEffect, useContext, useState, SetStateAction, Dispatch, useRef } from 'react';\r\nimport { ErrorType, mapJSError } from '../globals/error-handling';\r\nimport { StateContext } from '../globals/context';\r\nimport useGraphQL, { fetchGraphQl } from './use-graphql';\r\n// import { invalidRules } from '../components/PasswordInput'; //use It for re-check password validity before api request\r\nimport useEffectDeep from '../utils/use-effect-deep';\r\n\r\nexport type LogInPropsType = {\r\n  email: string,\r\n  password: string,\r\n  remember: boolean\r\n}\r\ntype LogInReturnType = {\r\n  loginErrors: ErrorType[] | null,\r\n  logIn: Dispatch<SetStateAction<LogInPropsType>>\r\n};\r\n\r\ntype LoginDataType = {\r\n  token: string,\r\n  expiration: number\r\n}\r\n\r\nexport default function useLogIn(): LogInReturnType {\r\n  const { contextState, contextDispatch } = useContext(StateContext);\r\n  const [ loginData, logIn] = useState<LogInPropsType>({email: '', password: '', remember: false});\r\n  const [ loginErrors, setLoginErrors ] = useState<ErrorType[]>([]);\r\n  const newToken = useRef('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if(\r\n          loginData.email.length > 4 &&\r\n          loginData.password.length > 3 /* &&\r\n          ( newToken.current === '' ||\r\n          contextState.token !== newToken.current) */ // prevent infinite loop\r\n        ){\r\n          const expression = `\r\n            query {\r\n              login(email: \"${loginData.email}\", password: \"${loginData.password}\", remember: ${loginData.remember.toString()}) {\r\n                token\r\n                expiration\r\n              }\r\n            }\r\n          `;\r\n          const data = await fetchGraphQl<LoginDataType>({ expression });\r\n          if (data && data.token?.length > 3) {\r\n            const payload = {...data, email: loginData.email };\r\n            if (loginData.remember) {\r\n              localStorage.setItem('token', data.token);\r\n            } else {\r\n              sessionStorage.setItem('token', data.token);\r\n            }\r\n            newToken.current = data.token;\r\n            contextDispatch({ type: 'SIGNEDIN', payload});\r\n            logIn(prev => ({...prev, email: ''}));\r\n          }          \r\n        }\r\n      } catch(err) {\r\n        setLoginErrors([mapJSError(err)]);\r\n      }\r\n    })();\r\n\r\n  },[loginData.email, loginData.password, loginData.remember, contextDispatch])\r\n\r\n  return {loginErrors, logIn};\r\n}\r\n\r\ntype CheckIsAliveReturnType = {\r\n  email: string,\r\n  expiration: number,\r\n  token: string,\r\n  remember: boolean\r\n}\r\n\r\ntype IsAliveResponseType = {\r\n  email: string,\r\n  expiration: number,\r\n  remember: boolean\r\n}\r\nconst deadToken = {email: '', token: '', expiration: 0, remember: false};\r\n\r\nexport async function checkIsAlive(currentToken?: string): Promise<CheckIsAliveReturnType> {\r\n  const token: string | null = currentToken || sessionStorage.getItem('token') || localStorage.getItem('token');\r\n  if (!token) return Promise.resolve(deadToken);\r\n  const expression = `query {\r\n    tokenIsAlive(token: \"${token}\") {\r\n      email,\r\n      expiration,\r\n      remember\r\n    }\r\n  }`;\r\n  const data = await fetchGraphQl<IsAliveResponseType>({expression, token});\r\n  return !!data?.email ? { ...data, token} : deadToken;\r\n}\r\n\r\ntype UseRefreshReturnType = {\r\n  refreshErrors: ErrorType[] | null,\r\n  refreshToken: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport function useRefreshToken(): UseRefreshReturnType {\r\n  const { data, errors, fetchData} = useGraphQL<LoginDataType>({token: '', expiration: 0});\r\n  const { contextState, contextDispatch } = useContext(StateContext);\r\n  const [ doRefresh, refreshToken] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(doRefresh) {\r\n      const token: string | null = contextState.token || sessionStorage.getItem('token') || localStorage.getItem('token');\r\n      if (!token) return;\r\n      const expression = `query { \r\n        refreshToken(token: \"${token}\") {\r\n          token\r\n          expiration\r\n        } \r\n      }`;\r\n      fetchData({expression, isAuth: true});\r\n      refreshToken(false);\r\n    }\r\n  }, [doRefresh, contextState.token, fetchData])\r\n\r\n  useEffectDeep(() => {\r\n    if (data && data?.token.length > 3) {\r\n      const payload = {...data, email: contextState.email };\r\n\r\n      if (contextState.remember) {\r\n        localStorage.setItem('token', data.token);\r\n      } else {\r\n        sessionStorage.setItem('token', data.token);\r\n      }\r\n\r\n      contextDispatch({ type: 'REFRESHEDTOKEN', payload});\r\n    }\r\n  }, [data, contextDispatch, contextState.email, contextState.remember]);\r\n\r\n  return {refreshErrors: errors, refreshToken};\r\n}\r\n\r\ntype LogOutReturnType = {\r\n  logOutErrors: ErrorType[] | null,\r\n  logOut: Dispatch<SetStateAction<boolean>>\r\n};\r\n\r\nexport function useLogOut(): LogOutReturnType  {\r\n  const { contextDispatch } = useContext(StateContext);\r\n  const [ doLogOut, logOut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(doLogOut){\r\n      localStorage.removeItem('token');\r\n      sessionStorage.removeItem('token');\r\n      contextDispatch({ type: 'SIGNEDOUT'});\r\n    }\r\n  }, [doLogOut, contextDispatch])\r\n\r\n  return {logOutErrors: null, logOut};\r\n}\r\n","import React, { ReactElement } from 'react';\nimport {\n  Collapse,\n  IconButton,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport { ErrorType, hasErrors } from '../globals/error-handling';\nimport keyGenerate from '../utils/string';\n\ntype severityType = 'info' | 'success' | 'warning' | 'error';\n\ntype AlertPropsType = {\n  isOpen: boolean,\n  severity: severityType,\n  closeFn?: (...args: any) => any,\n  title: string,\n  body: string | string[] | ErrorType[]\n}\n\ntype IconPropType = {\n  severity: severityType,\n  alertIcon: string\n}\n\ntype useStylePropType = {\n  severity: severityType\n}\n\nconst useStyles =  makeStyles((theme: Theme) => createStyles({\n  frame: {\n    backgroundColor: (props: useStylePropType) => theme.palette[props.severity].light,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.black,\n  },\n  alertIcon: {\n    color: (props: useStylePropType) => theme.palette[props.severity].dark\n  }\n}));\n\nfunction IconBanner(props: IconPropType): ReactElement {\n  switch(props.severity) {\n    case 'error': return (<ErrorIcon className={props.alertIcon} />);\n    case 'warning': return (<WarningIcon className={props.alertIcon} />);\n    case 'info': return (<InfoIcon className={props.alertIcon} />);\n    case 'success': return (<CheckCircleIcon className={props.alertIcon} />);\n    default: return (<></>);\n  }\n}\n\n\nfunction BannerAlert(props: AlertPropsType) {\n  const {isOpen, severity, closeFn, title, body} = props;\n  const classes = useStyles({severity});\n  const bodyToShow = (typeof body === 'string')\n    ? body\n    : hasErrors(body)\n      ? (\n        <List dense={true}>\n          { (body as ErrorType[]).map(err => (<ListItem key={err.key}><ListItemText primary={err.message} /></ListItem>)) }\n        </List>\n      ) : (body as string[]).map(phar => <Box key={keyGenerate(phar, 10)}>{phar}</Box>);\n\n  return (\n    <Collapse in={isOpen}>\n      <Box className={classes.frame} m={2} p={1}>\n        <Grid container>\n          <Grid item xs={1}>\n            <IconBanner severity={severity} alertIcon={classes.alertIcon} />\n          </Grid>\n          <Grid item xs={(typeof closeFn !== 'undefined') ? 10: 11}>\n            <Typography variant=\"h4\">{title}</Typography>\n            {bodyToShow}\n          </Grid>\n          {\n            (typeof closeFn !== 'undefined') && (\n              <Grid item xs={1}>\n                <IconButton onClick={closeFn} color=\"primary\" aria-label=\"close\">\n                  <CloseIcon />\n                </IconButton>\n              </Grid>              \n            ) \n          }\n        </Grid>\n      </Box>\n    </Collapse> \n  )\n}\n/*\nAs of 2020-05-01, Alert is buggy\n  <Alert\n    action={\n      <IconButton\n        aria-label=\"close\"\n        color=\"inherit\"\n        size=\"small\"\n        onClick={closeFn}\n      >\n        <CloseIcon fontSize=\"inherit\" />\n      </IconButton>\n    }\n  >\n    <AlertTitle>User Saved Successfully</AlertTitle>\n    Data of user was saved to database\n  </Alert>\n  */\nexport default BannerAlert;\n"],"sourceRoot":""}